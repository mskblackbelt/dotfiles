#!/usr/bin/env python3

import matplotlib
import matplotlib.pyplot as plt
import sys
import re
import getopt

# plot [option] 'functions' minx maxx [miny maxy]

usage = '''pplot [option] 

Options:
  -h, --help    print this message
  -f, --pdf     generate PDF plot (default is PNG)
  -l, --line    connect points with a line

Generate a PNG (default) or PDF plot of the given data. Each line of input 
data represents one (x, y) point. The x and y values can be separated by tabs, 
spaces, or commas. Normally, pplot plots only the points. If you want to 
connect the points with a line, use the -l option. The output is typically 
redirected to a file.

The min and max values can be given as expressions. 

Example:
  pbpaste | pplot  0 5 > plot.png

'''

# Handle the options.
try:
  opts, args = getopt.getopt(sys.argv[1:], 'hfl', ['help', 'pdf', 'line'])
except getopt.GetoptError as err:
  sys.stderr.write(str(err) + '\n\n')
  sys.stderr.write(usage)
  sys.exit()

# fmt = 'png'
# for o, a in opts:
#   if o == '-p' or o == '--pdf':
#     fmt = 'pdf'

# # Handle the arguments.
# try:
#   fcns = args[0].split(';')
#   minx = eval(args[1])
#   maxx = eval(args[2])
# except IndexError:
#   sys.stderr.write(usage)
#   sys.exit()
  
marker = '.'
# matplotlib.use('png')
fmt = 'png'
for o, a in opts:
    if o == '-l' or '--line':
        marker = '.-'
    if o == '-f' or '--pdf':
        fmt == 'pdf'
        # matplotlib.use('pdf')

x = []
y = []   
for line in sys.stdin:
  line = line.strip()
  vals = re.split(r'\s+|\s*,\s*', line)
  x.append(vals[0])
  y.append(vals[1])
fig = plt.plot(x, y, marker)
plt.margins(0.05)
plt.minorticks_on()
plt.grid(which='both', color='#dddddd')


# Output the plot.
if fmt == 'pdf':
  plt.savefig(sys.stdout.buffer, format='pdf')
else:
  plt.savefig(sys.stdout.buffer, format='png')

